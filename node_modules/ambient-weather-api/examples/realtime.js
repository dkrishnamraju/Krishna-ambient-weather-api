require('dotenv').config()
const AmbientWeatherApi = require('../lib/index')
const moment = require('moment-timezone');
const https = require('https');
// helper function
function getName (device) {
  return device.info.name
}

const apiKey = process.env.AMBIENT_WEATHER_API_KEY || 'baf21a6a36ef416380bb769b53516b0feca8ff214968400780b60401d620f919'
const api = new AmbientWeatherApi({
  apiKey,
  applicationKey: process.env.AMBIENT_WEATHER_APPLICATION_KEY || 'f96c7ccf09374a52a4e4e016985f7ed0c7ea1be8d4a2412e933705b10cf1778a'
})

function convertToIST(date) {
  const format = 'YYYY-MM-DD hh:mm:ss A';
  const utcDate = moment.utc(date);
  const istDate = utcDate.tz('Asia/Kolkata').format(format);
  return istDate;
}

let T30AeratorsONoptions = {
  hostname: 'maker.ifttt.com',
  port: 443,
  path: '/trigger/TurnOnT30Aerators/with/key/kHUAajXgmiiGjtFB7IOdg2iU92Q1xjBs2sxz4vt4qut',
  method: 'POST'
};

let T30AeratorsOFFoptions = {
  hostname: 'maker.ifttt.com',
  port: 443,
  path: '/trigger/TurnOffT30Aerators/with/key/kHUAajXgmiiGjtFB7IOdg2iU92Q1xjBs2sxz4vt4qut',
  method: 'POST'
};

function fahrenheitToCelsius(fahrenheit) {
  var celsius = (fahrenheit - 32) * 5 / 9;
  return celsius.toFixed(1);
}

function convertMphToKmph(mph) {
  const kmph = mph * 1.60934;
  return kmph.toFixed(1);
}

api.connect()
api.on('connect', () => console.log('Connected to Ambient Weather Realtime API!'))

api.on('subscribed', data => {
  console.log('Subscribed to ' + data.devices.length + ' device(s): ')
  console.log(data.devices.map(getName).join(', '))
})

let RecentWeatherData = [];
let AvgWindSpeedKmph = 0;
let RecentWindSpeed = 0;
let TurnOnAeratorsFlag = 0;
api.on('data', data => {

  RecentWindSpeed  = convertMphToKmph(data.windspeedmph);

  if(RecentWeatherData.length < 5)
  {
    RecentWeatherData.push(data);
  }
  else
  {
    RecentWeatherData.shift();
    RecentWeatherData.push(data);
  }

  // Calculate average (replace 'windspeedmph' with the actual property you're interested in)

let sum = RecentWeatherData.reduce((a, b) => a + b.windspeedmph, 0);
let avg = sum / RecentWeatherData.length;
AvgWindSpeedKmph = convertMphToKmph(avg);
newWeatherData = 1;
})
api.subscribe(apiKey)

let newWeatherData = 0;
//const now = moment();

function processData()
{
  const now = moment(); 
  /* if new data received between 10 PM to 7 AM*/
  if((now.hour() >= 22) || (now.hour() <= 7))  
  {
    if(newWeatherData == 1)
    {
      if(now.minute() % 3 === 0 )
      {
        if((AvgWindSpeedKmph < 3)/*  & (TurnOnAeratorsFlag == 0)*/)
        {
          let req = https.request(T30AeratorsONoptions).end();
          TurnOnAeratorsFlag = 1;
        }

        if((AvgWindSpeedKmph > 5)/* & (TurnOnAeratorsFlag == 1)*/)
        {
          let req = https.request(T30AeratorsOFFoptions).end();
          TurnOnAeratorsFlag = 0;
        }
      }
    
      //console.log(convertToIST(data.date) + ' - ' + getName(data.device) + ' current outdoor temperature is: ' + fahrenheitToCelsius(data.tempf) + 'Â°C')
      //console.log(convertToIST(RecentWeatherData.date) + ' - '  + ' WindSpeed: ' + RecentWindSpeed + ' kmph')
      //console.log(convertToIST(RecentWeatherData.date) + ' - '  + ' AvgWindSpeed: ' + AvgWindSpeedKmph + ' kmph\n')
      //let req = https.request(options).end();
      //console.log(data);
      newWeatherData = 0;
    }
  }
  else if(TurnOnAeratorsFlag == 1)
  {
    let req = https.request(T30AeratorsOFFoptions).end();
    TurnOnAeratorsFlag = 0;    
  }
 
}

setInterval(processData, 30000);