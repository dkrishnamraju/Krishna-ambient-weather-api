const axios = require('axios');
const moment = require('moment-timezone');
const AmbientWeatherApi = require('../lib/index')

// Replace these with your actual API keys.
const apiKey = 'f9a59daaecb440f99ce3581b380f4a686c347022d011470e91036ab031c95b61';
const applicationKey = '8f574908756f401da6ab6cf1ce75f309044a5ed74db3483388552f4af58e1514';

const api = new AmbientWeatherApi({
    apiKey: process.env.AMBIENT_WEATHER_API_KEY || 'f9a59daaecb440f99ce3581b380f4a686c347022d011470e91036ab031c95b61',
    applicationKey: process.env.AMBIENT_WEATHER_APPLICATION_KEY || '8f574908756f401da6ab6cf1ce75f309044a5ed74db3483388552f4af58e1514'
  })

// This is the URL for the Ambient Weather API.
const url = `https://api.ambientweather.net/v1/devices/30:83:98:A6:AC:3D?apiKey=${apiKey}&applicationKey=${applicationKey}`;

function convertToIST(date) {
    const format = 'YYYY-MM-DD hh:mm:ss A';
    const utcDate = moment.utc(date);
    const istDate = utcDate.tz('Asia/Kolkata').format(format);
    return istDate;
  }
  
  function fahrenheitToCelsius(fahrenheit) {
    var celsius = (fahrenheit - 32) * 5 / 9;
    return celsius.toFixed(1);
  }

function collectRealTimeData() {


    api.deviceData('30:83:98:A6:AC:3D', {limit:1})
    .then((deviceData) => {

        console.log(convertToIST(deviceData.date) + ' - ' + fahrenheitToCelsius(deviceData[0].tempf) + '°C');

    })


/*    
    axios.get(url)
        .then(response => {
            // The data is available in response.data.
            console.log(convertToIST(response.data.date) + ' - ' + fahrenheitToCelsius(response.data[0].tempf) + '°C');
           // console.log(response.data);            
        })
        .catch(error => {
            // Handle the error.
            console.error('Error collecting real-time data:', error);
        });

*/        
}

// Schedule the collectRealTimeData function to run every 10 seconds (10000 milliseconds).
setInterval(collectRealTimeData, 10000);
//collectRealTimeData();